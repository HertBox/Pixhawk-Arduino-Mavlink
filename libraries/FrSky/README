------------------------------------------------------------------------------
Library for decoding FrSky telemetry packages

     Copyright (c) 2013 Stefan Gofferje. All rights reserved.

     http://stefan.gofferje.net/arduino/arduino-frsky

     This library is free software; you can redistribute it and/or
     modify it under the terms of the GNU Lesser General Public
     License as published by the Free Software Foundation; either
     version 3 of the License, or (at your option) any later
     version.

     This library is distributed in the hope that it will be
     useful, but WITHOUT ANY WARRANTY; without even the implied
     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the GNU Lesser General Public License for more
     details.

     You should have received a copy of the GNU Lesser General
     Public License along with this library; if not, write to the
     Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
     Boston, MA 02110-1301 USA
------------------------------------------------------------------------------

Public functions:

char update(char c);
  Function:   Send a char to the decoder, if a full packet has been received,
              updates internal values
  Parameters: 1 char, read from serial port
  Returns:    1 if complete packet was received, 0 if no copmplete packet was
              received

unsigned char getRX_a1();
  Function:   Get raw value of receiver A1 port
  Parameters: None
  Returns:    Raw value of receiver A1 port (0-255)
  Note:       _IF_ the receiver has an internal voltage sensor, this internal
              voltage sensor has a 4:1 divider, leading to a result of
              0-13.2V in 256 steps. To get the voltage, multiply with
              0.0517647058824.
              The EXTERNAL A1 port does NOT have an integrated divider in
              any case!

unsigned char getRX_a2();
  Function:   Get raw value of receiver A2 port
  Parameters: None
  Returns:    Raw value of receiver A2 port (0-255)
  Note:       Without divider, the result represents 3.3V in 256 steps. To get
              the voltage, multiply with 0.0129411764706

unsigned char getLink_up();
  Function:   Get TX RSSI value
  Parameters: None
  Returns:    RSSI value for TX (how strong does the receiver receive the
              transmitter signal)

unsigned char getLink_dn();
  Function:   Get RX RSSI value
  Parameters: None
  Returns:    2*RSSI value for RX (how strong does the transmitter module
              receive the telemetry signal)
  Note:       The value is doubled. To get the correct value, divide by 2.

